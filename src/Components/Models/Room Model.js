/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { MeshBasicMaterial } from "three";
import { usePlane, Physics } from '@react-three/cannon';

const Plane=(props) => {
	const [groundRef] = usePlane(() => ({rotation:[-Math.PI/2, 0, 0]}))
	// console.log(...props.geometry)
	return(
		<mesh
			castShadow
			receiveShadow
			{...props}
			// material={new MeshBasicMaterial({color:'red', side:2})}
			scale={[20, 0, 20]}
		/>
	)
}

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF("/arena.gltf");
  console.log(nodes.Plane)
  return (
    <group ref={group} {...props} dispose={null}>
    <Physics gravity={[0,-20,0]}>
		<Plane geometry={nodes.Plane.geometry} material={materials.floor} />	
		{props.children}
    </Physics>
      <group position={[0, 10, 0]} scale={[15, 10, 15]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials.ceiling}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001_1.geometry}
          material={materials.walls}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/arena.gltf");